// <auto-generated />
using ITMS.Plugins.EFCoreSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITMS.Plugins.EFCoreSql.Migrations
{
    [DbContext(typeof(ITMSContext))]
    partial class ITMSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITMS.CoreBusiness.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<string>("InventoryName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.ToTable("Inventories", (string)null);

                    b.HasData(
                        new
                        {
                            InventoryId = 1,
                            InventoryName = "CPU",
                            Price = 250.0,
                            Quantity = 10
                        },
                        new
                        {
                            InventoryId = 2,
                            InventoryName = "Motherboard",
                            Price = 200.0,
                            Quantity = 5
                        },
                        new
                        {
                            InventoryId = 3,
                            InventoryName = "Graphics Card",
                            Price = 328.0,
                            Quantity = 3
                        },
                        new
                        {
                            InventoryId = 4,
                            InventoryName = "Keyboard",
                            Price = 50.0,
                            Quantity = 16
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
